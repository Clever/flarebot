version: 2.1

executors:
  common-executor:
    working_directory: ~/Clever/flarebot
    docker:
      - image: cimg/go:1.24-node
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      MASTER_COMPARE: master...<<pipeline.git.branch>>
      PREVIOUS_PIPELINE_COMPARE: << pipeline.git.base_revision >>..<<pipeline.git.revision>>

commands:
  clone-ci-scripts:
    description: Clone the ci-scripts repo
    steps:
      - run:
          name: Clone ci-scripts
          command: cd .. && git clone --depth 1 -v https://github.com/Clever/ci-scripts.git && cd ci-scripts && git show --oneline -s

jobs:
  build:
    executor: common-executor
    steps:
      - checkout
      - run:
          name: Set up .npmrc
          command: |
            sed -i.bak s/\${npm_auth_token}/$NPM_TOKEN/ .npmrc_docker
            mv .npmrc_docker .npmrc
      - run: npm ci
      - run: make build-ts
      - run: make install_deps
      - run: APP_NAME=flarebot-slack-cleanup make build
      - persist_to_workspace:
          root: ~/Clever
          paths: "."

  publish:
    executor: common-executor
    steps:
      - attach_workspace:
            at: ~/Clever
      - clone-ci-scripts
      - setup_remote_docker
      - run: ../ci-scripts/circleci/docker-publish $DOCKER_USER $DOCKER_PASS "$DOCKER_EMAIL" $DOCKER_ORG
      - run: ../ci-scripts/circleci/catapult-publish $CATAPULT_URL $CATAPULT_USER $CATAPULT_PASS flarebot
      - run: ../ci-scripts/circleci/catapult-publish-lambda flarebot-slack-cleanup

  unit-test:
    executor: common-executor
    steps:
      - attach_workspace:
          at: ~/Clever
      - run:
          name: Set up CircleCI artifacts directories
          command: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
      - run: make lint
      - run: make test-js
      - run: make test

  deploy:
    executor: common-executor
    steps:
      - clone-ci-scripts
      - run: if [ "${CIRCLE_BRANCH}" == "master" ]; then ../ci-scripts/circleci/dapple-deploy $DAPPLE_URL $DAPPLE_USER $DAPPLE_PASS $APP_NAME; fi;
      - run: if [ "${CIRCLE_BRANCH}" == "master" ]; then ../ci-scripts/circleci/dapple-deploy $DAPPLE_URL $DAPPLE_USER $DAPPLE_PASS flarebot-slack-cleanup; fi;

workflows:
  version: 2.1
  build_test_publish_deploy:
    jobs:
      - build
      - unit-test:
          requires:
            - build
      - publish:
          context:
            - aws-ecr-private
            - aws-lambda-private
          requires:
            - build
      - deploy:
          requires:
            - unit-test
            - publish
